#!/usr/bin/perl
#
# Create a navigation file for the PDFs on the website
#

use strict;
use Cwd qw(getcwd);
use Data::Dumper;
use Getopt::Long;
use List::MoreUtils qw(uniq);
use Switch;
use XML::Simple;

my $xml = new XML::Simple;
my ($tocfile, $PDFDIR);
GetOptions(
	"x=s" => \$tocfile,
	"p=s" => \$PDFDIR
);
exit "Missing toc.xml" if (!-f $tocfile);
exit "Syntax: $0 toc.xml /path/to/PDF/folder/" if (!$PDFDIR);
my $toc  = $xml->XMLin($tocfile, ForceArray => 1) || die "Syntax: $0 toc.xml /path/to/PDF/folder";
my $nav;

$ENV{'TMPDIR'}="/tmp";
my $BASEDIR = getcwd;

my $topic = $toc->{"name"}[0];

my (@bits) = split(/\s/, $topic);
my $DOCID = pop(@bits);
$DOCID =~ s/[)(]//g;


my @YEARS;
foreach my $yearhash (@{$toc->{"termdata"}[0]->{"yeardata"}}){
	push(@YEARS, $yearhash->{"model-year"});
}

push (@YEARS, "NONE") if ($#YEARS < 0);

foreach my $YYYY (sort @YEARS) {
	foreach my $entry (@{$toc->{"item"}}) {
		my ($cat1, $cat2, $cat3, $item, $link);

		$cat1 = @{$entry->{"name"}}[0];
		foreach my $hash2 (@{$entry->{"item"}}) {
			$cat2 = $hash2->{"name"}[0];
			$cat2 = "Body" if ($cat2 eq "body");
	
			foreach my $hash3 (@{$hash2->{"item"}}) {
				$cat3 = $hash3->{"name"}[0];
				$cat3 = "Body" if ($cat3 eq "body");
		
				if (defined($hash3->{"tocdata"})) {
				    for (my $POS=0; $POS < $#{$hash3->{"tocdata"}}; $POS++) {
					my $hash4 = @{$hash3->{"item"}}[$POS];
			    		my $fromyear = $hash3->{"tocdata"}[$POS]->{"fromyear"};
   					my $toyear   = $hash3->{"tocdata"}[$POS]->{"toyear"};

					$link = $hash4->{"href"};
					$item = @{$hash4->{"name"}}[0] || $hash4->{"name"};
       		 			if ($fromyear <= $YYYY && $YYYY <= $toyear) {
       		     				push (@{$nav->{$topic}->{$cat1}->{$cat2}->{$cat3}}, [$item, $link, $item]);
       					}
				    }
				} else {
					my $hash4 = @{$hash3->{"item"}}[0];
					if (!defined($hash4)) { $hash4 = $hash3; }
					$hash4 = $hash3;
					$link = $hash4->{"href"};
					$item = @{$hash4->{"name"}}[0] || $hash4->{"name"};
       		     			push (@{$nav->{$topic}->{$cat1}->{$cat2}->{$cat3}}, [$item, $link, $item]);
				}
			}
		}
	}

	my $out;
	while (my ($key, $value) = each(%{$nav})) {
		foreach my $topkey (sort keys %{$value}) {
			foreach my $subkey (sort { $a cmp $b } keys %{$value->{$topkey}}) {
				foreach my $nxtkey (sort { $a cmp $b } keys %{$value->{$topkey}->{$subkey}}) {
					foreach my $it (sort { $a->[0] cmp $b->[0] } @{$value->{$topkey}->{$subkey}->{$nxtkey}}) {
						my $href = @{$it}[1];
						$href=~s/.html$/.pdf/;
						push(@{$out->{$topkey}}, $href);
					}
				}
			}
		}
	}

	foreach my $key (keys %{$out}) {
		my $list;
		my $section = $key;
		$section =~ s/[ \/-]//g;
		foreach my $pdf (uniq(@{$out->{"$key"}})) {
			$list .= $BASEDIR . "/" . $pdf . " ";
		}
		my $type;
		if ($DOCID =~ /^RM/)    { $type = "RepairManual"; }
		elsif ($DOCID =~ /^NM/) { $type = "NewCarFeatures"; }
		elsif ($DOCID =~ /^BM/) { $type = "BodyRepair"; }
		elsif ($DOCID =~ /^EM/) { $type = "ElectricalWiringDiagram"; }
		my $outfile;
		if ($YYYY eq "NONE") {
			$outfile = "$type-$DOCID-$section.pdf";
		} else {
			$outfile = "$type-$DOCID-$section-$YYYY.pdf";
		}
		print "* Creating $PDFDIR/$outfile\n";
		`gs -sDEVICE=pdfwrite -dPDFSETTINGS=/prepress -dNOPAUSE -dBATCH -sOutputFile="$PDFDIR"/$outfile $list`;
	}
}


sub clean {
	my $i = shift;
	$i =~ tr/\x80-\xFF/ /;
	$i =~ s/'/\\'/g;
	return $i;
}
